apiVersion: v1
kind: Secret
metadata:
  name: cyber-range-secrets
  namespace: gan-cyber-range
  labels:
    app.kubernetes.io/name: gan-cyber-range-v2
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database credentials (base64 encoded in production)
  DATABASE_USERNAME: "cyber_range_user"
  DATABASE_PASSWORD: "SecureDBPassword123!"
  DATABASE_URL: "postgresql://cyber_range_user:SecureDBPassword123!@postgresql-service:5432/gan_cyber_range"
  
  # Redis credentials
  REDIS_PASSWORD: "SecureRedisPassword123!"
  REDIS_URL: "redis://:SecureRedisPassword123!@redis-service:6379/0"
  
  # JWT Secret
  JWT_SECRET: "super-secret-jwt-key-change-in-production-2024"
  JWT_ALGORITHM: "HS256"
  
  # API Keys for external services
  OPENAI_API_KEY: "your-openai-api-key"
  HUGGINGFACE_TOKEN: "your-huggingface-token"
  
  # Admin credentials
  ADMIN_USERNAME: "admin"
  ADMIN_PASSWORD: "AdminSecurePass123!"
  ADMIN_EMAIL: "admin@terragon.com"
  
  # Encryption keys
  FERNET_KEY: "encryption-key-for-sensitive-data"
  
  # External service credentials
  DOCKER_REGISTRY_USER: "registry_user"
  DOCKER_REGISTRY_PASS: "registry_password"
  
  # Monitoring credentials
  PROMETHEUS_USER: "prometheus"
  PROMETHEUS_PASS: "PrometheusPass123!"
  GRAFANA_ADMIN_USER: "admin"
  GRAFANA_ADMIN_PASS: "GrafanaAdmin123!"
  
  # Cloud provider credentials (if needed)
  AWS_ACCESS_KEY_ID: "your-aws-access-key"
  AWS_SECRET_ACCESS_KEY: "your-aws-secret-key"
  
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: gan-cyber-range
  labels:
    app.kubernetes.io/name: gan-cyber-range-v2
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
stringData:
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    # Replace with your actual TLS certificate
    # This is a placeholder for development
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    # Replace with your actual TLS private key
    # This is a placeholder for development
    -----END PRIVATE KEY-----

---
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: gan-cyber-range
  labels:
    app.kubernetes.io/name: gan-cyber-range-v2
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "registry.terragon.com": {
          "username": "registry_user",
          "password": "registry_password",
          "auth": "base64-encoded-credentials"
        },
        "ghcr.io": {
          "username": "github_user",
          "password": "github_token",
          "auth": "base64-encoded-credentials"
        }
      }
    }